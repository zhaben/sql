# -*- coding: utf-8 -*-
"""Group Fitness.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m-Y43CVXbSzczlN1wCWSET_nFQ0mdv5k

Group Fitness

Integration:Amazon Redshift Purpose:Contact Event Data
"""

-- For each member_id, compare all timestamp values, return the minimum in the created field, return the maximum in the updated field.

with x as (select member_id,
  md5(COALESCE(member_id,'')||COALESCE(CAST(class_instance_id AS VARCHAR),'')||COALESCE(CAST(class_start_date_local_ts AS VARCHAR),'')) as unique_id,
  class_instance_id,
  date_part('epoch', class_start_date_local_ts)::INTEGER as class_start_date_local_ts,
  date_part('epoch', booking_created_date_local_ts)::INTEGER as booking_created_date_local_ts,
  date_part('epoch', add_to_calendar_date_local_ts)::INTEGER as add_to_calendar_date_local_ts,
  date_part('epoch', waitlist_added_date_local_ts)::INTEGER as waitlist_added_date_local_ts,
  date_part('epoch', booking_cancelled_date_local_ts)::INTEGER as booking_cancelled_date_local_ts,
  LEAST(
  date_part('epoch', booking_created_date_local_ts)::INTEGER,
  date_part('epoch', add_to_calendar_date_local_ts)::INTEGER,
  date_part('epoch', waitlist_added_date_local_ts)::INTEGER,
  date_part('epoch', booking_cancelled_date_local_ts)::INTEGER  --does it make sense to keep this here?
  ) AS created_timestamp,
  GREATEST(
  date_part('epoch', booking_created_date_local_ts)::INTEGER,
  date_part('epoch', add_to_calendar_date_local_ts)::INTEGER,
  date_part('epoch', waitlist_added_date_local_ts)::INTEGER,
  date_part('epoch', booking_cancelled_date_local_ts)::INTEGER
  ) AS updated_timestamp,
  class_facility_code,
  class_name,
  class_category_name,
  class_duration,
  class_level_name,
  class_attendance_count,
  class_capacity,
  instructor_name,
  waitlist_capacity,
  is_reoccurring_class_flag,
  is_substitute_flag,
  booked_count,
  add_to_calendar_count,
  waitlist_count,
  taken_count,
--Bring in facility name and region for the given class
  i.facility_name as class_facility_name,
  i.local_region_desc as class_facility_local_region
from simon.event_group_fitness f
left join simon.facility_info i
  on f.class_facility_code=i.facility_code
)

select * from x where created_timestamp > date_part('epoch', '2019-08-18 00:00:00')::INTEGER
and updated_timestamp > date_part('epoch', '2019-08-18 00:00:00')::INTEGER