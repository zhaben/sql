# -*- coding: utf-8 -*-
"""SMS Report.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VyZKPxdoNwRvCvmX6eICbYNYDptdZvYQ

SMS Report

Integration:Simon Snowflake Purpose:Other
"""

/*Goal: An SMS report including Sends and Clicks data aggregated by campaign in Attentive*/

/* attentive changed schema of detail provided on 5/27/2020. _v1 contains data prior to this change and _v2 contains new format with additional subscription_type field */
/* the purpose of this query is to union these into one table where subscription_type is null when it was not provided */
with attentive as (select
type,
phone,
client_id,
client_email as email,
timestamp,
join_source,
NULL AS subscription_type,
message_id,
message_name,
message_text,
message_type,
message_subtype,
message_start,
creative_id,
creative_name,
creative_type,
creative_subtype
from "HUMANN"."PROD"."ATTENTIVE_DAILY_BACKFILL" -- doesn't contain subscription type
where phone<>'phone'
UNION
select 
type,
phone,
client_id,
client_email as email,
timestamp,
join_source,
subscription_type,
message_id,
message_name,
message_text,
message_type,
message_subtype,
message_start,
creative_id,
creative_name,
creative_type,
creative_subtype
from "HUMANN"."PROD"."ATTENTIVE_DAILY_SINCE_BACKFILL" -- contains subscription type
where phone<>'phone'
UNION
select 
type,
phone,
client_id,
email,
timestamp,
join_source,
subscription_type,
message_id,
message_name,
message_text,
message_type,
message_subtype,
message_start,
creative_id,
creative_name,
creative_type,
creative_subtype
from "HUMANN"."SHARE"."ATTENTIVE_SEND_EVENTS_BACKFILL" 
where phone<>'phone'
)

,sms_data as(
select phone, 
--concat(phone, timestamp) as unique_id, 
--extract(epoch from timestamp::timestamp) as created_timestamp, 
message_id,
timestamp,
type, 
message_name,
message_subtype,
message_text, 
message_type
from attentive
)

/*Analyzes clicks and sends data*/
,sms_report as (
select message_id, 
message_name,
MIN(timestamp) as earliest_timestamp,
COUNT(CASE WHEN type = 'MESSAGE_RECEIPT' THEN message_name ELSE null END) as total_sms_sends,
COUNT(DISTINCT CASE WHEN type = 'MESSAGE_RECEIPT' THEN phone ELSE null END) as total_unique_sms_sends,
COUNT(CASE WHEN type = 'MESSAGE_LINK_CLICK' THEN message_name ELSE null END) as total_sms_clicks,
COUNT(DISTINCT CASE WHEN type = 'MESSAGE_LINK_CLICK' THEN phone ELSE null END) as total_unique_sms_clicks
from sms_data
group by message_id, message_name
)

select * from sms_report
where message_name != '' or message_id != ''
order by earliest_timestamp desc